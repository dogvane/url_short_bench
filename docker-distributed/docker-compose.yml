version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: urlshort_nginx
    ports:
      - "10086:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    environment:
      - TZ=Asia/Shanghai
    depends_on:
      - urlshort-app-1
      - urlshort-app-2
      - urlshort-app-3
    networks:
      - urlshort-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: urlshort_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: urlshort
      MYSQL_USER: urlshort
      MYSQL_PASSWORD: urlshort123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - urlshort-network
    restart: unless-stopped
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 20
      interval: 10s
      start_period: 60s
    # 性能优化：增加内存和CPU限制
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  redis:
    image: redis:7-alpine
    container_name: urlshort_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf
    networks:
      - urlshort-network
    restart: unless-stopped
    command: redis-server /etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      interval: 5s
    # 性能优化：增加内存限制
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  prometheus:
    image: prom/prometheus:latest
    container_name: urlshort_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - urlshort-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: urlshort_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - urlshort-network
    restart: unless-stopped
    depends_on:
      - prometheus

  mysql-exporter:
    image: prom/mysqld-exporter
    container_name: urlshort_mysql_exporter
    environment:
      - DATA_SOURCE_NAME=exporter:exporter123@tcp(mysql:3306)/
      - TZ=Asia/Shanghai           # 新增：设置时区为上海
    ports:
      - "9104:9104"
    networks:
      - urlshort-network
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./mysql-exporter/.my.cnf:/etc/.my.cnf:ro
      - /etc/localtime:/etc/localtime:ro # 新增：挂载宿主机时区文件

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: urlshort_redis_exporter
    environment:
      - REDIS_ADDR=redis:6379
    ports:
      - "9121:9121"
    networks:
      - urlshort-network
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  urlshort-app-1:
    build:
      context: ..
      dockerfile: docker-distributed/Dockerfile
    container_name: urlshort_app_1
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: "Server=mysql;Port=3306;Database=urlshort;Uid=urlshort;Pwd=urlshort123;CharSet=utf8mb4;Pooling=true;Min Pool Size=20;Max Pool Size=200;Connection Timeout=30;Command Timeout=30;Connection Lifetime=0;Connection Reset=true;"
      Redis__ConnectionString: "redis:6379"
      Redis__Database: 0
      Snowflake__WorkerId: 1
      Snowflake__DatacenterId: 1
    ports:
      - "8081:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - urlshort-network
    restart: unless-stopped
    # 性能优化：增加资源限制
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  urlshort-app-2:
    build:
      context: ..
      dockerfile: docker-distributed/Dockerfile
    container_name: urlshort_app_2
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: "Server=mysql;Port=3306;Database=urlshort;Uid=urlshort;Pwd=urlshort123;CharSet=utf8mb4;Pooling=true;Min Pool Size=20;Max Pool Size=200;Connection Timeout=30;Command Timeout=30;Connection Lifetime=0;Connection Reset=true;"
      Redis__ConnectionString: "redis:6379"
      Redis__Database: 0
      Snowflake__WorkerId: 2
      Snowflake__DatacenterId: 1
    ports:
      - "8082:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - urlshort-network
    restart: unless-stopped
    # 性能优化：增加资源限制
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  urlshort-app-3:
    build:
      context: ..
      dockerfile: docker-distributed/Dockerfile
    container_name: urlshort_app_3
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: "Server=mysql;Port=3306;Database=urlshort;Uid=urlshort;Pwd=urlshort123;CharSet=utf8mb4;Pooling=true;Min Pool Size=20;Max Pool Size=200;Connection Timeout=30;Command Timeout=30;Connection Lifetime=0;Connection Reset=true;"
      Redis__ConnectionString: "redis:6379"
      Redis__Database: 0
      Snowflake__WorkerId: 3
      Snowflake__DatacenterId: 1
    ports:
      - "8083:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - urlshort-network
    restart: unless-stopped
    # 性能优化：增加资源限制
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

networks:
  urlshort-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  prometheus_data:
  grafana_data:
