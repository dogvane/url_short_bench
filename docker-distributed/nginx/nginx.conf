env TZ;

# 关键优化：设置 worker 进程数
worker_processes 4;  # 自动设置为 CPU 核心数
worker_cpu_affinity auto;  # 自动绑定 CPU

# 增加文件描述符限制 - 必须在main块中
worker_rlimit_nofile 65536;

events {
    worker_connections 8192;  # 减少单进程连接数，因为有多个worker
    use epoll;
    multi_accept on;
    accept_mutex off;
    accept_mutex_delay 500ms;  # 优化锁延迟
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式，使用ISO8601时间（上海时区）
    log_format main '$remote_addr - $remote_user [$time_iso8601] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log off;
    error_log /var/log/nginx/error.log;

    # 基本设置 - 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 15;           # 进一步降低，提高吞吐量
    keepalive_requests 10000;       # 增大每个连接可复用请求数
    types_hash_max_size 2048;
    client_max_body_size 10M;
    client_body_buffer_size 64k;    # 减少缓冲区大小
    client_header_buffer_size 2k;   # 减少 header 缓冲区
    large_client_header_buffers 4 16k;  # 减少大 header 缓冲区

    # 代理缓冲区优化 - 针对高并发调整
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 4 4k;  # 减少缓冲区数量
    proxy_busy_buffers_size 8k;

    # Gzip压缩 - 作为跳转功能，暂时不考虑 gzip 压缩
    gzip off;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 2;  # 关键优化：从6降到2，大幅减少CPU消耗
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript;  # 减少压缩类型，只压缩最常见的

    client_header_timeout 5s;      # 减少超时时间
    client_body_timeout 5s;
    send_timeout 5s;
    reset_timedout_connection on;   # 及时关闭超时连接

    # 包含站点配置
    include /etc/nginx/conf.d/*.conf;
}
