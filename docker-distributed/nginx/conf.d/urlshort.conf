upstream urlshort_backend {
    least_conn;
    server urlshort-app-1:8080 max_fails=2 fail_timeout=10s weight=1;
    server urlshort-app-2:8080 max_fails=2 fail_timeout=10s weight=1;
    server urlshort-app-3:8080 max_fails=2 fail_timeout=10s weight=1;
    keepalive 200;  # 大幅增加keepalive连接数以支持高并发
    keepalive_requests 10000;  # 增加每个keepalive连接的请求数
    keepalive_timeout 60s;  # 增加keepalive超时时间
}

server {
    listen 80;
    server_name localhost;

    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    location /stub_status {
        stub_status;
        allow all; # Allow access from the exporter
    }

    # 短链接重定向 - 高频访问，优化缓存
    location /u/ {
        # 添加速率限制
       
        proxy_pass http://urlshort_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 连接和超时设置 - 进一步优化性能
        proxy_connect_timeout 1s;  # 进一步减少连接超时
        proxy_send_timeout 5s;     # 减少发送超时
        proxy_read_timeout 5s;     # 减少读取超时
        
        # 缓冲区优化 - 减少缓冲区以节省内存
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # 错误处理 - 快速失败
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 1;  # 只重试1次
        proxy_next_upstream_timeout 2s;  # 减少重试超时
    }

    # 创建短链接
    location /create {
       
        proxy_pass http://urlshort_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Content-Type $content_type;
        proxy_set_header Content-Length $content_length;
        
        # 连接和超时设置 - 优化创建接口
        proxy_connect_timeout 2s;  # 减少连接超时
        proxy_send_timeout 15s;  # 创建操作可能需要更长时间
        proxy_read_timeout 15s;
        
        # 缓冲区优化
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 4 4k;  # 减少缓冲区数量
        
        # 错误处理 - 快速失败
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 1;  # 只重试1次
        proxy_next_upstream_timeout 10s;  # 减少重试超时
    }

    # 默认错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        return 404 "Not Found";
        add_header Content-Type text/plain;
    }
    
    location = /50x.html {
        return 500 "Server Error";
        add_header Content-Type text/plain;
    }
}
