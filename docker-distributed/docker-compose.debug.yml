version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: urlshort_mysql_debug
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: urlshort
      MYSQL_USER: urlshort
      MYSQL_PASSWORD: urlshort123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_debug:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - urlshort-network
    restart: unless-stopped
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 30
      interval: 5s
      start_period: 120s

  redis:
    image: redis:7-alpine
    container_name: urlshort_redis_debug
    ports:
      - "6379:6379"
    volumes:
      - redis_data_debug:/data
    networks:
      - urlshort-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      interval: 5s

  urlshort-app-1:
    build:
      context: ../src/v3
      dockerfile: ../../docker-distributed/Dockerfile
    container_name: urlshort_app_debug
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: "Server=mysql;Port=3306;Database=urlshort;Uid=urlshort;Pwd=urlshort123;CharSet=utf8mb4;Pooling=true;Min Pool Size=5;Max Pool Size=50;Connection Timeout=60;"
      Redis__ConnectionString: "redis:6379"
      Redis__Database: 0
    ports:
      - "8081:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - urlshort-network
    restart: unless-stopped

networks:
  urlshort-network:
    driver: bridge

volumes:
  mysql_data_debug:
  redis_data_debug:
